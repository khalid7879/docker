name: CI/CD for PHP App with Nginx and MySQL

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # ✅ Build & Push PHP-FPM Image
      - name: Build and Push PHP-FPM Image
        run: |
          docker build -f php.Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/php-fpm-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/php-fpm-app:latest

      # ✅ Build Nginx Image (with config validation)
      - name: Build Nginx Image
        run: |
          docker build -f Dockerfile -t nginx-test .
          docker run --rm nginx-test nginx -t   # <-- validate nginx.conf
          docker tag nginx-test ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to AWS EC2
        run: |
          echo "${{ secrets.AWS_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'

            # Create Docker network
            docker network create app_network || true

            # Stop and remove old containers
            docker rm -f php-app nginx-app mysql-db || true

            # Run MySQL
            docker run -d \
              --name mysql-db \
              --network app_network \
              -e MYSQL_ROOT_PASSWORD=pass@321 \
              -e MYSQL_DATABASE=student_enrollment \
              -p 3306:3306 \
              mysql:8.0

            echo "Waiting for MySQL to initialize..."
            sleep 30

            # Login & pull latest images
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/php-fpm-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest

            # Run PHP-FPM
            docker run -d \
              --name php-app \
              --network app_network \
              -v /var/www/html:/var/www/html \
              -e DB_HOST=mysql-db \
              -e DB_USER=root \
              -e DB_PASSWORD=pass@321 \
              -e DB_NAME=student_enrollment \
              ${{ secrets.DOCKER_USERNAME }}/php-fpm-app:latest

            # Run Nginx
            docker run -d \
              --name nginx-app \
              --network app_network \
              -p 80:80 \
              -v /var/www/html:/var/www/html \
              ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest

            # Wait a few seconds for containers to settle
            sleep 5

            echo "=== Running containers ==="
            docker ps

            echo "=== Logs: php-app ==="
            docker logs php-app || true

            echo "=== Logs: nginx-app ==="
            docker logs nginx-app || true

          EOF
