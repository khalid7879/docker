name: CI/CD for PHP App

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Images
        run: |
          # Build Nginx image
          docker build -t ${{ secrets.DOCKER_USERNAME }}/php-nginx -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/php-nginx

          # Build PHP (web) image
          docker build -t ${{ secrets.DOCKER_USERNAME }}/php-web -f php.Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/php-web

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to AWS EC2
        run: |
          echo "${{ secrets.AWS_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'

            # Set up Docker network (if needed)
            docker network create app_network || true

            # Stop and remove existing containers
            docker stop php-nginx || true
            docker rm php-nginx || true
            docker stop php-web || true
            docker rm php-web || true
            docker stop mysql-db || true
            docker rm mysql-db || true

            # Run MySQL container
            docker run -d \
              --name mysql-db \
              --network app_network \
              -e MYSQL_ROOT_PASSWORD=pass@321 \
              -e MYSQL_DATABASE=student_enrollment \
              -p 3306:3306 \
              mysql:8.0

            echo "Waiting for MySQL to initialize..."
            sleep 30

            # Run PHP (web) container
            docker run -d \
              --name php-web \
              --network app_network \
              -v /home/ubuntu/app:/var/www/html \
              -e DB_HOST=mysql-db \
              -e DB_USER=root \
              -e DB_PASSWORD=pass@321 \
              -e DB_NAME=student_enrollment \
              ${{ secrets.DOCKER_USERNAME }}/php-web

            # Run Nginx container
            docker run -d \
              --name php-nginx \
              --network app_network \
              -p 80:80 \
              -v /home/ubuntu/app:/var/www/html \
              ${{ secrets.DOCKER_USERNAME }}/php-nginx

          EOF
